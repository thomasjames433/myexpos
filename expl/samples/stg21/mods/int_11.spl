alias userSP R9;
userSP = SP;

alias sysNum R10;
sysNum = [[PTBR + 2*(userSP - 5)/512] * 512 + (userSP - 5)%512];
[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 9] = sysNum;

[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 13] = SP;
SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 11]* 512 - 1;

if(sysNum == INT_GETPID)then                          //GETPID
    [[PTBR + 2*(userSP - 1)/512] * 512 + (userSP - 1)%512] = [SYSTEM_STATUS_TABLE + 1];
endif;

if(sysNum == INT_GETPPID)then                          //GETPPID
    [[PTBR + 2*(userSP - 1)/512] * 512 + (userSP - 1)%512] = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 2];
endif;

if(sysNum == INT_WAIT)then                          //WAIT
    
    alias pid R1;
    pid = [[PTBR + 2*(userSP - 4)/512] * 512 + (userSP - 4)%512];

    if(pid == [SYSTEM_STATUS_TABLE + 1] || [PROCESS_TABLE + pid*16 + 4] == TERMINATED || pid<0 || pid>15)then
        [[PTBR + 2*(userSP - 1)/512] * 512 + (userSP - 1)%512] = -1;
        [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 9] = 0;
        SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 13];
        ireturn;
    endif;

    [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 4] = WAIT_PROCESS;
    [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 5] = pid;

    multipush(R1, R9);
    call MOD_5;
    multipop(R1, R9);

    [[PTBR + 2*(userSP - 1)/512] * 512 + (userSP - 1)%512] = 0;

endif;
 
if(sysNum == INT_SIGNAL)then                          //SIGNAL

    alias counter R11;
    counter = 0;
    while(counter < 16)do
        if([PROCESS_TABLE + counter*16 + 4] == WAIT_PROCESS && [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 5] == [SYSTEM_STATUS_TABLE + 1])then
            [PROCESS_TABLE + counter*16 + 4] = READY;
        endif;
        counter = counter + 1;
    endwhile;

endif;

[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 9] = 0;
SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 13];
ireturn;
