alias functionNum R1;
alias currentPID R2;

//Aquiring terminal

if(functionNum==ACQUIRE_TERMINAL)then
    while([TERMINAL_STATUS_TABLE]==1)do
        [PROCESS_TABLE + currentPID*16 + 4]=WAIT_TERMINAL;
        multipush(R1, R2);
        call MOD_5;
        multipop(R1, R2); 
    endwhile;
    [TERMINAL_STATUS_TABLE]=1;
    [TERMINAL_STATUS_TABLE + 1]=currentPID;
    return;
endif;

//Releasing terminal

if(functionNum==RELEASE_TERMINAL)then 

    if(currentPID!=[TERMINAL_STATUS_TABLE+1])then   
        R0 = -1;
        return;
    endif;

    [TERMINAL_STATUS_TABLE]=0;

    alias count R6;
    count = 0;
    while(count<16)do   
        if([PROCESS_TABLE + count*16 + 4]==WAIT_TERMINAL)then   
            [PROCESS_TABLE + count*16 + 4]=READY;
        endif;
	count = count + 1;
    endwhile;
    R0 = 0;
    return;

endif;

//Acquiring disk

if(functionNum==ACQUIRE_DISK)then

    while([DISK_STATUS_TABLE]==1)do
        [PROCESS_TABLE + currentPID*16 + 4]=WAIT_DISK;
        multipush(R1, R2);
        call MOD_5;
        multipop(R1, R2); 
    endwhile;

    [DISK_STATUS_TABLE]=1;
    [DISK_STATUS_TABLE + 4]=currentPID;

    return;
endif;

//Acquiring semaphore

if(functionNum == ACQUIRE_SEMAPHORE)then
    
    alias index R0;
    R0 = 0;

    while(index < MAX_SEM_COUNT)do                       
        if([SEMAPHORE_TABLE + index*4 + 1] == 0)then
            [SEMAPHORE_TABLE + index*4 + 1] = 1;
            [SEMAPHORE_TABLE + index*4 + 0] = -1;
            return;
        endif;
        index = index + 1;        
    endwhile;

    index = -1;                                          

    return;
endif;

//Releasing semaphore

if(functionNum == RELEASE_SEMAPHORE)then

    alias semID R3;

    if([SEMAPHORE_TABLE + semID*4] == currentPID)then
        [SEMAPHORE_TABLE + semID*4] = -1;

        alias counter R5;
        counter = 0;
        while(counter < 16)do
            if([PROCESS_TABLE + counter*16 + 4] == WAIT_SEMAPHORE && [PROCESS_TABLE + counter*16 + 5] == semID)then
                [PROCESS_TABLE + counter*16 + 4] = READY;
            endif;
            counter = counter + 1;
        endwhile;

        [SEMAPHORE_TABLE + semID*4 + 1] = [SEMAPHORE_TABLE + semID*4 + 1] - 1;

    endif;
    return;
endif;
