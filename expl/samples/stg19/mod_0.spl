alias fnum R1;
alias cpid R2;


if (fnum==3)then

while([DISK_STATUS_TABLE]==1)do


[PROCESS_TABLE + cpid*16 +4]=WAIT_DISK;

multipush(R1,R2,R3,R4,R5);
call SCHEDULER;
multipop(R1,R2,R3,R4,R5);

endwhile;

[DISK_STATUS_TABLE] = 1;
[DISK_STATUS_TABLE + 4] = cpid;

return;

endif;


if (fnum==8)then

while([TERMINAL_STATUS_TABLE]==1)do
[PROCESS_TABLE +cpid*16+4]=WAIT_TERMINAL;
multipush(R0,R1,R2,R3);

call MOD_5;
multipop(R0,R1,R2,R3);

endwhile;

[TERMINAL_STATUS_TABLE]=1;
[TERMINAL_STATUS_TABLE+1]=cpid;
R0=0;
return;

endif;

if (fnum==9)then

if( [TERMINAL_STATUS_TABLE+1]!=cpid)then
R0=-1;
return;

else

[TERMINAL_STATUS_TABLE]=0;
alias i R9;
i=0;

while(i < 16) do 

if([PROCESS_TABLE + i*16 + 4] == WAIT_TERMINAL) then
[PROCESS_TABLE + i*16 + 4] = READY;
endif;
i=i+1;
endwhile;

R0=0;
return;

endif;

endif;

R0=-1;
return;
