alias syscallno R0;
alias usersp R1;

syscallno = [[PAGE_TABLE_BASE + [SYSTEM_STATUS_TABLE+1]*20 + 2 * (SP - 5)/512] * 512 + (SP - 5) % 512];

[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = syscallno;

usersp=SP;

[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 13]=SP;
SP=[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 11]*512 -1;


if(syscallno==11)then

[[PAGE_TABLE_BASE + [SYSTEM_STATUS_TABLE+1]*20  + 2 * ((usersp - 1) / 512)] * 512 + ((usersp - 1) % 512)]=[SYSTEM_STATUS_TABLE + 1];

endif;

if(syscallno==12)then

[[PAGE_TABLE_BASE + [SYSTEM_STATUS_TABLE+1]*20  + 2 * ((usersp - 1) / 512)] * 512 + ((usersp - 1) % 512)]= [PROCESS_TABLE+   [SYSTEM_STATUS_TABLE + 1]*16 +2 ];

endif;

if(syscallno==13)then
alias pid R2;

pid=[[PAGE_TABLE_BASE + [SYSTEM_STATUS_TABLE+1]*20  + 2 * ((usersp - 4) / 512)] * 512 + ((usersp - 4) % 512)];

if(pid==[SYSTEM_STATUS_TABLE+1] || [PROCESS_TABLE +pid*16 +4]==TERMINATED || pid<0 || pid>15  )then

[[PAGE_TABLE_BASE + [SYSTEM_STATUS_TABLE+1]*20  + 2 * ((usersp - 1) / 512)] * 512 + (usersp - 1) % 512]= -1;

[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9]=0;
SP=[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 13];
ireturn;

endif;

[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 4]=WAIT_PROCESS;
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 5]=pid;



multipush(R0,R1,R2);
call SCHEDULER;
multipop(R0,R1,R2);

[[PAGE_TABLE_BASE + [SYSTEM_STATUS_TABLE+1]*20  + 2 * ((usersp - 1) / 512)] * 512 + ((usersp - 1) % 512)]= 0;


endif;


if(syscallno==14)then


alias i R2;
i=0;
while(i<16)do

if([PROCESS_TABLE + i* 16 + 4]==WAIT_PROCESS  && [PROCESS_TABLE + i* 16 + 5]==[SYSTEM_STATUS_TABLE+1] )then

[PROCESS_TABLE + i * 16 + 4]=READY;

endif;

i=i+1;
endwhile;

[[PAGE_TABLE_BASE + [SYSTEM_STATUS_TABLE+1]*20  + 2 * ((usersp - 1) / 512)] * 512 + ((usersp - 1) % 512)]= 0;


endif;


[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9]=0;
SP=[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 13];
ireturn;


