[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16  +9]=7;

alias usersp R0;
usersp=SP;


[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16  +13]=SP;
SP=[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16  +11]*512 -1;

alias filedescaddr R1;
alias filedesc R2;

PTBR = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE +1]*16 + 14];

filedescaddr = [PTBR + 2*(usersp-4)/512]* 512 + (usersp-4)%512 ;
filedesc=[filedescaddr];

if (filedesc != -1)then //0

if(filedesc <0 || filedesc >7)then //1
[[PTBR + 2*(usersp-1)/512]* 512 + (usersp-1)%512]=-1;

else

alias rte R3;
rte = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 11]*512 + RESOURCE_TABLE_OFFSET + filedesc*2;
       
if([rte]!=FILE)then //2
[[PTBR + 2*(usersp-1)/512]* 512 + (usersp-1)%512]=-1;

else 
alias oftEntry R4;
alias inodeIndex R5;

oftEntry=[rte+1];
inodeIndex=[OPEN_FILE_TABLE + oftEntry*4];
alias temp R10;

multipush(R0,R1,R2,R3,R4,R5);
R1=4;
R2=[SYSTEM_STATUS_TABLE+1];
R3=inodeIndex;
call MOD_0;
temp=R0;
multipop(R0,R1,R2,R3,R4,R5);

if(temp==-1)then //3
[[PTBR + 2*(usersp-1)/512]* 512 + (usersp-1)%512]=-1;
else 
alias lseek R6;
lseek=OPEN_FILE_TABLE + oftEntry*4 +2;
alias logMemBuf R7;
logMemBuf=[PTBR + 2*(usersp-3)/512]* 512 + (usersp-3)%512;

alias phyAdd R8;
phyAdd=[PTBR + 2*[logMemBuf]/512]*512 + [logMemBuf]%512;

if(inodeIndex==INODE_ROOT)then //4

if([lseek]==480)then //5
[[PTBR + 2*(usersp-1)/512]* 512 + (usersp-1)%512]=-2;
else
[phyAdd]=[ROOT_FILE + [lseek]];
[lseek]=[lseek]+1;
[[PTBR + 2*(usersp-1)/512]* 512 + (usersp-1)%512]=0;

endif; //5

else

if([lseek]== [INODE_TABLE+ inodeIndex*16+2])then //6
[[PTBR + 2*(usersp-1)/512]* 512 + (usersp-1)%512]=-2;
else

multipush(R0,R1,R2,R3,R4,R5,R6,R7,R8);
R1=2;
R2=[INODE_TABLE + inodeIndex*16 + 8+ [lseek]/512];
R3=[lseek]%512;
R4=phyAdd;
call MOD_3;
multipop(R0,R1,R2,R3,R4,R5,R6,R7,R8);

[lseek] =[lseek]+1;
[[PTBR + 2*(usersp-1)/512]* 512 + (usersp-1)%512]=0;


endif; //6

endif; //4

endif; //3

multipush(R0, R1, R2, R3, R4, R5);
R1 = 5;
R2 = [SYSTEM_STATUS_TABLE + 1];
R3 = inodeIndex;
call MOD_0;
multipop(R0, R1, R2, R3, R4, R5);

endif; //2

endif; //1


else

alias retval R3;
retval= [[PTBR + 2 * (usersp-3)/512] *512 + (usersp-3)%512];
multipush(R0,R1,R2,R3);
R1=4;
R2=[SYSTEM_STATUS_TABLE+1];
R3=retval;
 
call MOD_4;

multipop(R0,R1,R2,R3);
[[PTBR + 2 * (usersp-1)/512] *512 + (usersp-1)%512]=0;

endif; //0


[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16  +9]=0;
SP= [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 13];
ireturn;



