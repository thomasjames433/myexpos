[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 9] = 5;
alias uptr  R0;
uptr= SP;
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 13] = SP;
SP=[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 11]*512 - 1;
alias filedescaddr R1;
alias filedesc R2;
PTBR = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE +1]*16 + 14];
filedescaddr = ([PTBR + 2*((uptr-4)/512)])*512 + (uptr-4)%512;
filedesc = [filedescaddr];
if(filedesc != -2)
  then
    alias retaddr R5;
    //return value
    retaddr = ([PTBR + 2*(uptr-1)/ 512])*512 + (uptr-1)%512;

    [retaddr] = -1;
    print filedesc;
    print "[sys_write]:X";

    //Writing code for invoking terminal write function instead of print statement
    multipush(R0, R1, R2, R3);
    //error
    print "error" ;
    multipop(R0, R1, R2, R3);
else
    alias word R5;
    word = [([PTBR + 2*(uptr-3)/512])*512 + (uptr-3)%512];
    print word;

    //Stage 15 modification
    multipush(R0, R1, R2, R3, R5);

    //Terminal write function call
    R1 = 3;
    R2 = [SYSTEM_STATUS_TABLE + 1] ;
    R3 = word ;
    call MOD_4;
    multipop(R0, R1, R2, R3, R5);	

    alias retaddr R6;
    retaddr = ([PTBR + 2*(uptr-1)/ 512])*512 + (uptr-1)%512;
    [retaddr] = 0;
endif;
//restoring context
//setting mode bit to 0 for user mode
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 9] = 0;
//saving uptr back toSP
SP=[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 13];
ireturn;
