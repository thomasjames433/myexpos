alias fnum R1;
alias cpid R2;

if(fnum==1)then //99

alias i R3;
i=3;

while(i<15)do
if([PROCESS_TABLE + i*16 +6]==0 && [PROCESS_TABLE + i*16 +4]==WAIT_PROCESS)then
break;
endif;
i=i+1;
endwhile;

if(i==15)then //0

i=3;
while(i<15)do
if([PROCESS_TABLE + i*16 +6]==0 && [PROCESS_TABLE + i*16 +4]==WAIT_SEMAPHORE)then
break;
endif;
i=i+1;
endwhile;

if(i==15)then //1

alias maxTick R4;
maxTick=-1;

i=4;

while(i<15)do

alias pt R10;
pt=PROCESS_TABLE + i*16;

if([pt +6]==0 )then //21

if(maxTick==-1 || [pt]>[PROCESS_TABLE +maxTick*16])then

if([pt +4]!=TERMINATED &&[pt +4]!=ALLOCATED && [pt +4]!=RUNNING )then //3
maxTick=i;
endif; //3


if(maxTick==-1)then
[SYSTEM_STATUS_TABLE +5]=0;     
return;
endif;
i=maxTick;

endif; //22
endif; //21


endwhile;

endif; //1

endif;//0

[PROCESS_TABLE + i*16]=0;

alias swapPtbr R5;
swapPtbr =[PROCESS_TABLE + i*16 +14];

alias counter R6;
counter=4;

swapPtbr=swapPtbr;

while(counter<20)do

alias pageno R7;
pageno=[swapPtbr+counter];

if(  (counter<=6 || counter >=16  ) && pageno!=-1 )then  //0

multipush(R1,R2,R3,R4,R5,R6);
R1=GET_SWAP_BLOCK;
call MOD_2;
multipop(R1,R2,R3,R4,R5,R6,R7);

[ DISK_MAP_TABLE +10 * i  +counter/2 ]=R0;

multipush(R1,R2,R3,R4,R5,R6,R7);
R1=DISK_STORE;
R2=[SYSTEM_STATUS_TABLE +1];
R2=pageno;
R3=R0;
call MOD_4;
multipop(R1,R2,R3,R4,R5,R6,R7);


endif;  //0


multipush(R1,R2,R3,R4,R5,R6,R7);
R1=RELEASE_PAGE;
R2=pageno;
call MOD_2;
multipop(R1,R2,R3,R4,R5,R6,R7);

[pageno]=-1;
[swapPtbr +counter +1]="0000";

counter=counter+2;
endwhile;

[PROCESS_TABLE + i*16 +6]=1;

[SYSTEM_STATUS_TABLE+4]=[SYSTEM_STATUS_TABLE+4]+1;
[SYSTEM_STATUS_TABLE +5]=0;     

endif; //99


if(fnum==2)then //99

alias i R3;
i=3;

alias maxTick R4;
maxTick=-1;


while(i<15)do
alias pt R10;
pt=PROCESS_TABLE + i*16;

if( [pt +6]==1 && [pt]== READY ) then

if(maxTick==-1 || [pt]>[PROCESS_TABLE + maxTick*16])then
maxTick=i;
endif;
endif;

i=i+1;
endwhile;

if(maxTick==-1)then
[SYSTEM_STATUS_TABLE +5]=0;
return;
endif;

i= maxTick;

[PROCESS_TABLE +i*16]=0;

alias swapPtbr R5;
alias counter R6;

swapPtbr=[PROCESS_TABLE + i*16 +14];
counter =4;


while(counter<20)do

alias pageno R7;
pageno=[swapPtbr+counter];

if( (counter<=6 || counter >=16) && pageno !=-1)then //0


multipush(R1,R2,R3,R4,R5,R6,R7);
R1=GET_FREE_PAGE;
call MOD_2;
multipop(R1,R2,R3,R4,R5,R6,R7);

alias blockno R8;
blockno= [DISK_MAP_TABLE + i*10 + counter/2];

multipush(R1,R2,R3,R4,R5,R6,R7,R8);
R1=DISK_LOAD;
R2=[SYSTEM_STATUS_TABLE +1];
R2=R0;
R3=blockno;
call MOD_4;
multipop(R1,R2,R3,R4,R5,R6,R7,R8);

multipush(R1,R2,R3,R4,R5,R6,R7);
R1=RELEASE_BLOCK;
R2=blockno;
R3=[SYSTEM_STATUS_TABLE +1];
call MOD_2;
multipop(R1,R2,R3,R4,R5,R6,R7);


pageno = R0;
[swapPtbr + counter + 1] = "0110";


[DISK_MAP_TABLE + i*16 +counter/2]=-1;

else //0 

if([swapPtbr + counter]!=-1)then
[swapPtbr + counter + 1] = "0100";
endif;

endif; //0


counter=counter+2;
endwhile;

[PROCESS_TABLE + i*16 + 6] = 0;

[SYSTEM_STATUS_TABLE+4]=[SYSTEM_STATUS_TABLE+4]-1;
[SYSTEM_STATUS_TABLE +5]=0;


endif; //99

return;
