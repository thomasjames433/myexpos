alias userSP R0;
userSP = SP;

alias sysNum R10;
sysNum = [[PTBR + 2*(userSP - 5)/512] * 512 + (userSP - 5)%512];
[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 9] = sysNum;

[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 13] = SP;
SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 11]* 512 - 1;

alias semDiscriptor R3;
semDiscriptor = [[PTBR + 2*(userSP - 4)/512]*512 + (userSP - 4)%512];

alias resourceTable R5;
R5 = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 11]*512 + RESOURCE_TABLE_OFFSET;

alias semID R4;
semID = [resourceTable + 2*semDiscriptor + 1];

if(semDiscriptor<0 || semDiscriptor>7 || [resourceTable + semDiscriptor*2] != SEMAPHORE)then
    [[PTBR + 2*(userSP - 1)/512] * 512 + (userSP - 1)%512] = -1;
    [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 9] = 0;
    SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 13];
    ireturn;
endif;

//semlock

if(sysNum == INT_SEMLOCK)then

    while([SEMAPHORE_TABLE + semID*4] != -1 && [SEMAPHORE_TABLE + semID * 4] != [SYSTEM_STATUS_TABLE + 1])do
        [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 4] = WAIT_SEMAPHORE;
        [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 5] = semID;

        multipush(R0, R1, R2, R3, R4, R5, R10);
        call MOD_5;
        multipop(R0, R1, R2, R3, R4, R5, R10);
    endwhile;

    [SEMAPHORE_TABLE + semID*4] = [SYSTEM_STATUS_TABLE + 1];

endif;

//semunlock

if(sysNum == INT_SEMUNLOCK)then

    if([SEMAPHORE_TABLE + semID*4] != -1)then
    
        if([SEMAPHORE_TABLE + semID*4] != [SYSTEM_STATUS_TABLE + 1])then
            [[PTBR + 2*(userSP - 1)/512] * 512 + (userSP - 1)%512] = -2;
            [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 9] = 0;
            SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 13];
            ireturn;
        else

            [SEMAPHORE_TABLE + semID*4] = -1;

            alias counter R6;
            counter = 0;
            while(counter < 16)do
                if([PROCESS_TABLE + counter*16 + 4] == WAIT_SEMAPHORE && [PROCESS_TABLE + counter*16 + 5] == semID)then
                    [PROCESS_TABLE + counter*16 + 4] = READY;
                endif;
                counter = counter + 1;
            endwhile;
        endif;

    endif;
endif;


[[PTBR + 2*(userSP - 1)/512] * 512 + (userSP - 1)%512] = 0;
[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 9] = 0;
SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 13];
ireturn;
