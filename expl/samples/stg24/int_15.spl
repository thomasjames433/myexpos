alias syscallno R1;
alias usersp R0;
usersp=SP;

syscallno=[[PAGE_TABLE_BASE+ [SYSTEM_STATUS_TABLE]*20 + 2*(usersp-5)/512]*512 + (usersp-5)%512];

[PROCESS_TABLE + [SYSTEM_STATUS_TABLE +1]*16 + 13]=SP;
SP=[PROCESS_TABLE + [SYSTEM_STATUS_TABLE +1]*16 + 11]*512-1;

[PROCESS_TABLE + [SYSTEM_STATUS_TABLE +1]*16 + 9]=syscallno;



if([SYSTEM_STATUS_TABLE + 1] != 1 || [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 3] != 1)then
[[PAGE_TABLE_BASE+ [SYSTEM_STATUS_TABLE]*20 + 2 * (usersp - 1) / 512] * 512 + (usersp - 1) % 512] = -1;
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 9] = 0;    
SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 13];
ireturn;
endif;



//INODE TABLE
multipush(R1, R2, R3, R4);
R1 = DISK_STORE;
R2 = [SYSTEM_STATUS_TABLE + 1];
R3 = 59;
R4 = 3;
call MOD_4;

R1 = DISK_STORE;
R2 = [SYSTEM_STATUS_TABLE + 1];
R3 = 60;
R4 = 4;
call MOD_4;

//ROOT FILE
R1 = DISK_STORE;
R2 = [SYSTEM_STATUS_TABLE + 1];
R3 = 62;
R4 = 5;
call MOD_4;

//DISK FREE LIST
R1 = DISK_STORE;
R2 = [SYSTEM_STATUS_TABLE + 1];
R3 = 61;
R4 = 2;
call MOD_4;

multipop(R1, R2, R3, R4);


halt;


