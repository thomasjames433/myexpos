alias usersp R0;
usersp = SP;

[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) +9 ] = 27;
[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 13] = SP;
SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 11]* 512 - 1;


if([SYSTEM_STATUS_TABLE+1]!=1)then
[[PTBR + 2* (usersp-1)/512]*512 + (usersp-1)%512]=-2;
goto exit;
endif;


alias username R1;
alias password R2;
username=[[PTBR + 2* (usersp-4)/512]*512 + (usersp-4)%512];
password=[[PTBR + 2* (usersp-3)/512]*512 + (usersp-3)%512];


alias usertableEntry R3;
usertableEntry =0;

while(usertableEntry<MAX_USER_NUM)do

if([USER_TABLE+ 2*usertableEntry]== username)then
break;
endif;

usertableEntry=usertableEntry+1;
endwhile;

if(usertableEntry==MAX_USER_NUM)then
[[PTBR + 2* (usersp-1)/512]*512 + (usersp-1)%512]=-1;
goto exit;
endif;

encrypt password;

if([USER_TABLE+ 2*usertableEntry +1]!= password)then
[[PTBR + 2* (usersp-1)/512]*512 + (usersp-1)%512]=-1;
goto exit;
endif;



[PROCESS_TABLE + 2*16 +3]=usertableEntry;
[PROCESS_TABLE + 2*16 +4]=CREATED;

[PROCESS_TABLE + 16 +4]=WAIT_PROCESS;
[PROCESS_TABLE + 16 +5]=2;

[SYSTEM_STATUS_TABLE]=usertableEntry;

multipush(R0,R1,R2,R3);
call MOD_5;
multipop(R0,R1,R2,R3);



exit:
        SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 13];
        [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 0;

ireturn;
